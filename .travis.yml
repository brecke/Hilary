sudo: required

language: node_js

node_js:
  - "6.11.1"

services:
  - docker

# you can install additional dependencies required by your project such as Ubuntu packages or custom services
before_install:

#
# Changes in config.js for docker containers to run properly
#

- sed -i -e 's/\/src\/Hilary/\/home\/travis\/build\/brecke\/Hilary/g' docker-compose.yml
- sed -i -e 's/\/src\/files/\/home\/travis\/build\/brecke\/files/g' docker-compose.yml
- sed -i -e 's/\/src\/tmp/\/home\/travis\/build\/brecke\/tmp/g' docker-compose.yml

# Cassandra volume
# etherpad volume

# config.ui path
- printf "\n\nconfig.ui.path = './3akai-ux'" >> config.js

# cassandra
- printf "\n\nconfig.cassandra.hosts = ['oae-cassandra:9160']" >> config.js

# redis
- printf "\n\nconfig.redis.host = 'oae-redis';" >> config.js

# elasticsearch
- printf "\n\nconfig.search.hosts[0].host = 'oae-elasticsearch'" >> config.js
- printf "\n\nconfig.search.hosts[0].port = 9200" >> config.js

# rabbitmq
- printf "\n\nconfig.mq.connection.host = 'oae-rabbitmq'" >> config.js

# etherpad
- printf "\n\nconfig.etherpad.hosts[0].host = 'oae-etherpad'" >> config.js
- printf "\n\nconfig.etherpad.hosts[0].port = 9001" >> config.js

# previews
- printf "\n\nconfig.previews.enabled = true;" >> config.js

# e-mail
- printf "\n\nconfig.email.debug = false" >> config.js
- printf "\n\nconfig.email.transport = 'sendmail'" >> config.js

- ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
# - 'echo -e "Host *\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config'

install:

# build the hilary:latest image
- docker-compose create --build

# debug
# - docker-compose run oae-hilary 'ls -la 3akai-ux'
# - docker-compose run oae-hilary 'ls -la node_modules | grep oae-rest'

# install dependencies for oae-rest
- docker-compose run oae-hilary 'npm install node_modules/oae-rest'

# install dependencies for 3akai-ux
- docker-compose run oae-hilary 'npm install 3akai-ux'

# install dependencies for Hilary
- docker-compose run oae-hilary 'npm install'

before_script:

- docker-compose up
- sleep 10

script:
- docker-compose run oae-hilary 'grunt test-module:oae-content'

# after_success:

# after_failure:

# after_script:
